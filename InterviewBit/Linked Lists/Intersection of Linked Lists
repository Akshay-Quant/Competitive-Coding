/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
int findlength(ListNode* temp){
    int len=0;
    while(temp!=NULL){
        len++;
        temp=temp->next;
    }
    return len;
} 

ListNode* Solution::getIntersectionNode(ListNode* A, ListNode* B) {
    int n1=findlength(A);
    int n2=findlength(B);
    int diff;
    if(n1>n2){
        diff=n1-n2;
        while(diff--){
            A=A->next;
        }
    }else{
        diff=n2-n1;
        while(diff--){
            B=B->next;
        }
    }
    while(A!=NULL && B!=NULL){
        if(A==B)
            return A;
        A=A->next;
        B=B->next;
    }
    return 0;
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
}
