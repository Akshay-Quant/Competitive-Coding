/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::reverseBetween(ListNode* A, int m, int n) {
    if(m==n)
        return A;
    struct ListNode *current,*prev,*next,*head;
    head=A;
    prev=NULL;
    current=A;
    for(int i=1;i<m;i++){
        prev=current;
        current=current->next;
    }
    struct ListNode *constmprev=prev;
    struct ListNode *constm=current; //m node before m is in prev
    prev=current;
    current=current->next;
    for(int i=m+1;i<=n;i++){
        next=current->next;
        current->next=prev;
        prev=current;
        current=next;
    }
    constm->next=current;
    if(constmprev!=NULL){
        constmprev->next=prev;
    }
    if(m==1)
        return prev;
    else
        return A;
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
}
