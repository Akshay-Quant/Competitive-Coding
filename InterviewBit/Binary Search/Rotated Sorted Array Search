int findmin(const vector<int> &A,int l,int r){
    if(l>r)
        return -1;
    if(l==r){
        return l;
    }
    int mid=l+(r-l)/2;
    if(A[mid]<A[r]){
        return findmin(A,l,mid);
    }else if(A[mid]>A[r]){
        return findmin(A,mid+1,r);
    }else{
        int index1=findmin(A,l,mid);
        int index2=findmin(A,mid+1,r);
        if(index1!=-1 && index2!=-1){
            if(A[index1]<A[index2]){
                return index1;
            }
            return index2;
        }else if(index1!=-1){
            return index1;
        }else{
            return index2;
        }
    }
}

int binarysearch(const vector<int> &A, int l, int r, int B){
    if(l>r)
        return -1;
    if(l==r){
        if(A[l]==B)
            return l;
        return -1;
    }
    int mid=l+(r-l)/2;
    if(A[mid]<B){
        return binarysearch(A,mid+1,r,B);
    }else{
        return binarysearch(A,l,mid,B);
    }
}

int Solution::search(const vector<int> &A, int B) {
    int n=A.size();
    int pivot=findmin(A,0,n-1);
    int ans=binarysearch(A,0,pivot,B);
    if(ans!=-1)
        return ans;
    return binarysearch(A,pivot,n-1,B);
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
}
